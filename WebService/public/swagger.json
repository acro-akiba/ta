{
    "swagger": "2.0",
    "info": {
        "title": "TogoAnnotator API",
        "description": "TogoAnnotator API",
        "version": "1.0.0"
    },
    "host": "togoannotator.dbcls.jp",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/annotate",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/gene/{product}": {
            "get": {
                "tags": [
                    "GET"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getGene",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product",
                        "description": "The name that needs to be fetched. Use user1 for testing.",
                        "required": true,
                        "type": "string",
                        "default": "PsbA"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Result"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/genes/": {
            "post": {
                "tags": [
                    "POST"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The uploaded file data",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Result"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ddbj/": {
            "post": {
                "tags": [
                    "POST"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "ddbj",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The uploaded file data",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Result"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Result": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string",
                    "description": "TogoAnnotator result info.."
                },
                "match": {
                    "type": "string",
                    "description": "TogoAnnotator match type."
                },
                "query": {
                    "type": "string",
                    "description": "Input quary."
                },
                "result": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "result_array": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "gene_product"
                    },
                    "description": "Image URL representing the product."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}